buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://maven.outlands.top/releases' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.10.+', changing: true
        classpath "io.github.cosmicsilence:gradle-scalafix:0.2.1"
        classpath "net.kyori:blossom:2.1.0"
        //classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "scala"
apply plugin: "io.github.cosmicsilence.scalafix"
apply plugin: "net.kyori.blossom"
apply plugin: "maven-publish"

group = "mrtjp"
archivesBaseName = "MrTJPCore"

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    //Referred to as 'config' or 'project.config'
    project.ext.config = new ConfigSlurper().parse prop
}

configurations {
    deployerJars
}

repositories {
    maven {
        name "chickenbones"
        url "https://chickenbones.net/maven/"
    }
    maven {
        name 'Cleanroom Maven'
        url 'https://maven.cleanroommc.com/'
    }
    maven {
        url "https://repo.cleanroommc.com/snapshots"
    }
    maven {
        url "https://maven.outlands.top/releases/"
    }
    maven {
        url "https://jitpack.io/"
    }
    mavenCentral()
}


dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ftp:3.5.3"
    compileOnly "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:deobf"
    minecraft ("com.cleanroommc:cleanroom:15.24.0.3037")

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.10.2')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.10.2')

    implementation 'org.scala-lang:scala3-compiler_3:3.4.1'
    implementation 'org.scala-lang:scala3-library_3:3.4.1'
    implementation 'com.typesafe:config:1.4.3'
    implementation 'org.scala-lang.modules:scala-collection-compat_3:2.11.0'
    scalafix 'org.scala-lang.modules:scala-collection-compat_3:2.11.0'

}
version = project.config.mod_version
println "Starting build for $archivesBaseName $version for MC $config.mc_version"

minecraft {

    mappings channel: "stable", version: "39-1.12"

    //accessTransformer = file('src/main/resources/ccl_at.cfg')

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        def root = project.projectDir
        scala {
            srcDir new File(root, "src")
        }
        resources {
            srcDir new File(root, "resources")
        }
        blossom {
            resources {
                property("mod_version", version)
                property("ccl_version", config.ccl_version)
            }
        }
    }
}

processResources {
    duplicatesStrategy=DuplicatesStrategy.EXCLUDE
    // Copy everything else
    from(sourceSets.main.resources.srcDirs) {
        include 'assets/**/*.*'
    }
}


tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ["-semanticdb:synthetics:on"]
}

publishing {
    repositories {
        maven {
            name = "outlands"
            url = "https://maven.outlands.top/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = archivesBaseName.toLowerCase()
            version = version
            from components.java
        }
    }
}
